{"version":3,"sources":["logo.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","setEmail","senha","setSenha","auth","setAuth","token","setToken","params","setParams","user","setUser","handleSubmit","e","a","alert","axios","post","response","data","urlParams","URLSearchParams","window","location","search","console","log","resetParams","handleAceito","put","_id","recirect_uri","redirect_uri","googleAssistant","headers","Authorization","replace","state","message","useEffect","className","src","logo","width","alt","target","href","onClick","value","onChange","name","type","required","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ee0ac7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fbeef7d5.png\";","import React, { useEffect, useState } from 'react'\nimport logo from './logo.png';\nimport './App.css';\nimport axios from 'axios'\nfunction App() {\n\n    const [email, setEmail] = useState('')\n    const [senha, setSenha] = useState('')\n\n    const [auth, setAuth] = useState(false)\n    const [token, setToken] = useState(null)\n    const [params, setParams] = useState(null)\n    const [user, setUser] = useState({})\n\n    const handleSenha = (e) => {\n        setSenha(e.target.value)\n    }\n\n    const handleEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handleSubmit = async (e) => {\n        try {\n\n            if(email === ''){ alert('Email obritgatório'); return;}\n            if(senha === ''){ alert('Senha obrigatória'); return;}\n            \n            const response = await axios.post('https://mkcr9bfn2i.execute-api.sa-east-1.amazonaws.com/dev/auth/login', { email, senha })\n            const { data } = response.data\n\n            setToken(data.token)\n            setUser(data.user)\n\n            const urlParams = new URLSearchParams(window.location.search)\n            setParams(urlParams);\n            setAuth(true)\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const resetParams = ()=>{\n        setUser(null)\n        setAuth(false)\n        setParams(null)\n        setToken(null)\n        setEmail('')\n        setSenha('')\n    }\n\n    const handleCancela = () => {\n        resetParams()\n    }\n\n    const handleAceito = async () => {\n\n        try {\n\n            const response = await axios.put(`https://mkcr9bfn2i.execute-api.sa-east-1.amazonaws.com/dev/account/${user._id}`,\n                {\n                    recirect_uri: params.redirect_uri,\n                    googleAssistant: true\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                })\n\n            window.location.replace(`${params.redirect_uri}/bluedevx-46b63?code=${token}&state=${params.state}`)\n\n        } catch (error) {\n            alert(error.message)\n            console.log(error)\n        }\n    }\n\n    useEffect( ()=>{\n\n        return ()=>resetParams()\n    },[])\n\n    return (\n        <div className=\"form\">\n            {auth &&\n                <>\n                    <header className=\"form-header\">\n                        <img src={logo} width=\"70\" className=\"form-logo\" alt=\"logo\" />\n                        <p className=\"pt-3\">Conectando Bluedevx <br />com Google</p>\n                    </header>\n                    <div className=\"form-body\">\n                        <p>\n                            O google solicita acesso à sua conta na Bluedevx e ao mapa de dispositivos que você possui.\n                            Assim você terá a possibilidade de acessá-los através dos comandos de voz e outros recursos.\n                        </p>\n                        <div className=\"my-4 text-small\">\n                            <p>Revise as <a target=\"_blank\" href=\"http://policies.google.com/\">políticas de privacidade do Google</a>. <br/>\n                            Se você deseja desvincular sua conta, <a target=\"_blank\" href=\"https://myaccount.google.com/\">clique aqui</a>.</p>\n                             \n                        </div>\n                        <div className=\"form-group d-flex flex-row justify-content-between\">\n                            <button className=\"btn btn-light\" onClick={handleCancela}>Cancelar</button>\n                            <button className=\"btn btn-success\" onClick={handleAceito} >Aceitar e conectar</button>\n                        </div>\n                    </div>\n                </>\n            }\n\n            {!auth &&\n                <>\n                    <header className=\"form-header text-center\">\n                    <img src={logo} width=\"70\" className=\"form-logo\" alt=\"logo\" />\n                        <p className=\"p-10\">Entre com sua <br />conta Bluedevx</p>\n                    </header>\n                    <div className=\"form-body\">\n                        <div className=\"form-group\">\n                            <label className=\"label\">E-mail de Cadastro</label>\n                            <input className=\"form-control\" value={email} onChange={handleEmail} name=\"email\" type=\"email\" required={true} placeholder=\"E-mail\"></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"label\">Senha</label>\n                            <input className=\"form-control\" value={senha} onChange={handleSenha} type=\"password\" name=\"senha\" required={true} placeholder=\"**********\"></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-theme\" onClick={handleSubmit} >Entrar</button>\n                        </div>\n                    </div>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}